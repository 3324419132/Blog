---
import MainLayout from '../layouts/MainLayout.astro';
import { SITE_TITLE, SITE_DESCRIPTION, AUTHOR_NAME } from '../consts';
import { getCollection } from 'astro:content';

// 定义内容项的类型接口
interface ContentItem {
	title: string;
	description: string;
	image: string;
	type: string;
	link: string;
}

// 获取博客和项目数据
const allBlogPosts = await getCollection('blog');
const allProjects = await getCollection('projects');

// 精选内容数据
let featuredContent: ContentItem[] = [];

// 添加博客文章
if (allBlogPosts.length > 0) {
	// 最多添加2篇博客文章
	const featuredBlogPosts = allBlogPosts.slice(0, 2);
	featuredContent = featuredBlogPosts.map(post => ({
		title: post.data.title,
		description: post.data.description,
		image: post.data.heroImage || "https://images.unsplash.com/photo-1555066931-4365d14bab8c?q=80&w=1740",
		type: "article",
		link: `/blog/${post.slug}`
	}));
}

// 添加项目
if (allProjects.length > 0) {
	// 最多添加1个项目
	const featuredProject = allProjects[0];
	featuredContent.push({
		title: featuredProject.data.title,
		description: featuredProject.data.description,
		image: featuredProject.data.heroImage || "https://images.unsplash.com/photo-1551288049-bebda4e38f71?q=80&w=1740",
		type: "project",
		link: `/projects#${featuredProject.slug}`
	});
}

// 如果没有足够的内容，使用默认数据
if (featuredContent.length < 3) {
	// 默认内容数据
	const defaultContent: ContentItem[] = [
		{
			title: "构建现代化前端架构",
			description: "探索如何设计和实现一个可扩展、高性能的前端应用架构",
			image: "https://images.unsplash.com/photo-1555066931-4365d14bab8c?q=80&w=1740",
			type: "article",
			link: "/blog/modern-frontend-architecture"
		},
		{
			title: "数据可视化平台",
			description: "为企业打造的数据分析和可视化解决方案，让数据洞察更直观",
			image: "https://images.unsplash.com/photo-1551288049-bebda4e38f71?q=80&w=1740",
			type: "project",
			link: "/projects#data-visualization-platform"
		},
		{
			title: "如何优化React性能",
			description: "深入解析React性能优化的实用技巧和最佳实践",
			image: "https://images.unsplash.com/photo-1633356122544-f134324a6cee?q=80&w=1740",
			type: "article",
			link: "/blog/react-performance"
		}
	];

	// 补充缺少的内容
	const missingCount = 3 - featuredContent.length;
	featuredContent = [...featuredContent, ...defaultContent.slice(0, missingCount)];
}

// 当前状态数据
const currentStatus = {
	reading: "《深入理解TypeScript》",
	project: "AI驱动的内容管理系统",
	thinking: "如何将机器学习应用于前端开发"
};
---

<MainLayout>
	<main class="w-full">
		<!-- 英雄区 -->
		<section class="hero-section bg-bg-light dark:bg-bg-dark py-20 md:py-32">
			<div class="container mx-auto px-4">
				<div class="flex flex-col md:flex-row items-center">
					<!-- 左侧内容 -->
					<div class="md:w-2/3 mb-12 md:mb-0 md:pr-10 animate-fade-in">
						<h1 class="text-4xl md:text-6xl font-serif font-bold text-gray-900 dark:text-gray-100 leading-tight mb-6">
							代码植根于思想，<br />生活盛开如繁花
						</h1>
						<p class="text-xl md:text-2xl text-gray-700 dark:text-gray-300 max-w-2xl leading-relaxed mb-8">
							欢迎来到我的数字花园，这里记录我在技术探索、创意实践和生活思考中的点滴收获。
						</p>
						<div class="flex space-x-4">
							<a href="/blog" class="px-6 py-3 bg-accent hover:bg-accent-dark text-white font-medium rounded-lg transition-colors">
								浏览文章
							</a>
							<a href="/about" class="px-6 py-3 border border-gray-300 dark:border-gray-700 hover:border-accent dark:hover:border-accent text-gray-800 dark:text-gray-200 font-medium rounded-lg transition-colors">
								了解我
							</a>
						</div>
					</div>
					
					<!-- 右侧状态卡片 -->
					<div class="md:w-1/3 w-full animate-slide-up">
						<div class="bg-white dark:bg-gray-800 rounded-xl shadow-card p-6 border border-gray-100 dark:border-gray-700">
							<h3 class="font-serif text-xl font-bold text-accent mb-4">当前状态</h3>
							
							<div class="space-y-4">
								<div class="flex items-start">
									<div class="flex-shrink-0">
										<svg class="w-5 h-5 mt-1 text-accent" fill="currentColor" viewBox="0 0 20 20">
											<path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"></path>
										</svg>
									</div>
									<div class="ml-3">
										<p class="text-sm text-gray-500 dark:text-gray-400">正在阅读</p>
										<p class="text-gray-800 dark:text-gray-200">{currentStatus.reading}</p>
									</div>
								</div>
								
								<div class="flex items-start">
									<div class="flex-shrink-0">
										<svg class="w-5 h-5 mt-1 text-accent" fill="currentColor" viewBox="0 0 20 20">
											<path fill-rule="evenodd" d="M2 5a2 2 0 012-2h12a2 2 0 012 2v10a2 2 0 01-2 2H4a2 2 0 01-2-2V5zm3.293 1.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L7.586 10 5.293 7.707a1 1 0 010-1.414zM11 12a1 1 0 100 2h3a1 1 0 100-2h-3z" clip-rule="evenodd"></path>
										</svg>
									</div>
									<div class="ml-3">
										<p class="text-sm text-gray-500 dark:text-gray-400">最近捣鼓</p>
										<p class="text-gray-800 dark:text-gray-200">{currentStatus.project}</p>
									</div>
								</div>
								
								<div class="flex items-start">
									<div class="flex-shrink-0">
										<svg class="w-5 h-5 mt-1 text-accent" fill="currentColor" viewBox="0 0 20 20">
											<path d="M10 3.5a1.5 1.5 0 013 0V4a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-.5a1.5 1.5 0 000 3h.5a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-.5a1.5 1.5 0 00-3 0v.5a1 1 0 01-1 1H6a1 1 0 01-1-1v-3a1 1 0 00-1-1h-.5a1.5 1.5 0 010-3H4a1 1 0 001-1V6a1 1 0 011-1h3a1 1 0 001-1v-.5z"></path>
										</svg>
									</div>
									<div class="ml-3">
										<p class="text-sm text-gray-500 dark:text-gray-400">思考中</p>
										<p class="text-gray-800 dark:text-gray-200">{currentStatus.thinking}</p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
		
		<!-- 精选内容区 -->
		<section class="py-16 bg-gray-50 dark:bg-gray-900">
			<div class="container mx-auto px-4">
				<h2 class="text-3xl font-serif font-bold mb-8 text-center text-gray-900 dark:text-gray-100">
					精选内容
				</h2>
				
				<!-- 横向滚动区域 -->
				<div class="relative">
					<div class="overflow-x-auto pb-6 -mx-4 px-4 scrollbar-hide" id="featured-content">
						<div class="flex space-x-6 min-w-max">
							{featuredContent.map(item => (
								<a 
									href={item.link} 
									class="flex-none w-80 group bg-white dark:bg-gray-800 rounded-xl shadow-card overflow-hidden transition-transform hover:-translate-y-1"
								>
									<div class="aspect-w-16 aspect-h-9">
										<img 
											src={item.image} 
											alt={item.title} 
											class="object-cover"
										/>
									</div>
									<div class="p-5">
										<div class="flex items-center mb-3">
											<span class="text-xs font-medium px-2.5 py-0.5 rounded-full bg-accent/10 text-accent">
												{item.type === 'article' ? '文章' : '项目'}
											</span>
										</div>
										<h3 class="text-xl font-bold mb-2 text-gray-900 dark:text-gray-100 group-hover:text-accent transition-colors">
											{item.title}
										</h3>
										<p class="text-gray-600 dark:text-gray-400 text-sm line-clamp-2">
											{item.description}
										</p>
									</div>
								</a>
							))}
						</div>
					</div>

					<!-- 导航箭头 -->
					<button id="scroll-left" class="absolute left-0 top-1/2 -translate-y-1/2 bg-white dark:bg-gray-800 shadow-md rounded-full p-2 text-gray-800 dark:text-gray-200 hidden md:flex">
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
						</svg>
					</button>
					
					<button id="scroll-right" class="absolute right-0 top-1/2 -translate-y-1/2 bg-white dark:bg-gray-800 shadow-md rounded-full p-2 text-gray-800 dark:text-gray-200 hidden md:flex">
						<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
						</svg>
					</button>
				</div>
				
				<!-- 查看更多链接 -->
				<div class="text-center mt-10">
					<a href="/blog" class="inline-flex items-center text-accent hover:text-accent-dark">
						查看更多内容
						<svg class="w-5 h-5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
						</svg>
					</a>
				</div>
			</div>
		</section>
		
		<!-- 简介区域 -->
		<section class="py-16">
			<div class="container mx-auto px-4 max-w-4xl">
				<div class="flex flex-col md:flex-row items-center">
					<div class="md:w-2/5 mb-8 md:mb-0">
						<!-- 头像或形象图 -->
						<div class="rounded-full w-64 h-64 mx-auto overflow-hidden border-4 border-accent">
							<img 
								src="https://images.unsplash.com/photo-1517849845537-4d257902454a?q=80&w=500" 
								alt={AUTHOR_NAME}
								class="w-full h-full object-cover"
							/>
						</div>
					</div>
					<div class="md:w-3/5 md:pl-10">
						<h2 class="text-3xl font-serif font-bold mb-4 text-gray-900 dark:text-gray-100">
							你好，我是大豆橙
						</h2>
						<p class="text-lg text-gray-700 dark:text-gray-300 mb-6">
							一名充满好奇心的全栈开发者，热衷于探索技术边界和创造有意义的数字体验。
						</p>
						<p class="text-gray-600 dark:text-gray-400 mb-6">
							我相信技术应该服务于人性，而不是相反。在这个数字花园里，你会找到我对前端架构、用户体验设计和开发效率的思考，以及一些关于生活和学习的随笔。
						</p>
						<a href="/about" class="inline-flex items-center text-accent hover:text-accent-dark">
							了解更多关于我
							<svg class="w-5 h-5 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
							</svg>
						</a>
					</div>
				</div>
			</div>
		</section>
		</main>
</MainLayout>

<script>
	// 处理横向滚动
	document.addEventListener('DOMContentLoaded', () => {
		const container = document.getElementById('featured-content');
		const scrollLeftBtn = document.getElementById('scroll-left');
		const scrollRightBtn = document.getElementById('scroll-right');
		
		if (container && scrollLeftBtn && scrollRightBtn) {
			// 显示导航按钮
			scrollLeftBtn.classList.remove('hidden');
			scrollRightBtn.classList.remove('hidden');
			
			// 左滚动
			scrollLeftBtn.addEventListener('click', () => {
				container.scrollBy({ left: -300, behavior: 'smooth' });
			});
			
			// 右滚动
			scrollRightBtn.addEventListener('click', () => {
				container.scrollBy({ left: 300, behavior: 'smooth' });
			});
		}
	});
</script>

<style>
	/* 隐藏滚动条但保持功能 */
	.scrollbar-hide {
		-ms-overflow-style: none;  /* IE and Edge */
		scrollbar-width: none;  /* Firefox */
	}
	.scrollbar-hide::-webkit-scrollbar {
		display: none; /* Chrome, Safari, Opera */
	}
	
	/* 卡片阴影 */
	.shadow-card {
		box-shadow: 0 4px 20px -2px rgba(0, 0, 0, 0.08);
	}
	
	/* 动画 */
	.animate-fade-in {
		animation: fadeIn 0.8s ease-out forwards;
	}
	
	.animate-slide-up {
		animation: slideUp 0.8s ease-out forwards;
	}
	
	@keyframes fadeIn {
		from { opacity: 0; }
		to { opacity: 1; }
	}
	
	@keyframes slideUp {
		from { 
			opacity: 0; 
			transform: translateY(20px);
		}
		to { 
			opacity: 1;
			transform: translateY(0);
		}
	}
</style>
